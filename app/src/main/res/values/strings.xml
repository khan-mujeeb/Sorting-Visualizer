<resources>
    <string name="app_name">PESMCOE IT-Sorting Visualizer</string>
    <string name="visualizer">Visualizer</string>
    <string name="sorting">Sorting</string>
    <string name="enter_your_elements">Enter Your Elements</string>
    <string name="steps_involved">Steps Involved</string>
    <string name="code">Code</string>
    <string name="bubble_sort_is_the_simplest_sorting_algorithm_that_works_by_repeatedly_swapping_the_adjacent_elements_if_they_are_in_the_wrong_order_this_algorithm_is_not_suitable_for_large_data_sets_as_its_average_and_worst_case_time_complexity_is_quite_high">Bubble Sort is the simplest sorting algorithm that works by repeatedly swapping the adjacent elements if they are in the wrong order. This algorithm is not suitable for large data sets as its average and worst-case time complexity is quite high.</string>
    <string name="bubble_sort">Bubble Sort</string>
    <string name="the_subarray_which_is_already_sorted">- The subarray which is already sorted.</string>
    <string name="the_selection_sort_algorithm_sorts_an_array_by_repeatedly_finding_the_minimum_element_considering_ascending_order_from_unsorted_part_and_putting_it_at_the_beginning_the_algorithm_maintains_two_subarrays_in_a_given_array">The selection sort algorithm sorts an array by repeatedly finding the minimum element (considering ascending order) from unsorted part and putting it at the beginning. The algorithm maintains two subarrays in a given array.</string>
    <string name="selection_sort">Selection Sort</string>
    <string name="remaining_subarray_which_is_unsorted">- Remaining subarray which is unsorted</string>
    <string name="time_complexity_o_n2">Time complexity: O(N2)</string>
    <string name="auxiliary_space_o_1">Auxiliary Space: O(1)</string>
    <string name="insertion_sort">INSERTION SORT</string>
    <string name="insertion_sort_is_a_simple_sorting_algorithm_that_works_similar_to_the_way_you_sort_playing_cards_in_your_hands_the_array_is_virtually_split_into_a_sorted_and_an_unsorted_part_values_from_the_unsorted_part_are_picked_and_placed_at_the_correct_position_in_the_sorted_part">Insertion sort is a simple sorting algorithm that works similar to the way you sort playing cards in your hands. The array is virtually split into a sorted and an unsorted part. Values from the unsorted part are picked and placed at the correct position in the sorted part.</string>
    <string name="insertion_sort_is_adaptive_in_nature_i_e_it_is_appropriate_for_data_sets_which_are_already_partially_sorted">Insertion sort is adaptive in nature, i.e. it is appropriate for data sets which are already partially sorted.</string>
    <string name="sorting_visualizer">Sorting Visualizer</string>
</resources>